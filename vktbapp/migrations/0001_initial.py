# Generated by Django 4.2.11 on 2024-11-08 01:26

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='usermod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'can_bo',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DonVi',
            fields=[
                ('madv', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('tendv', models.TextField()),
            ],
            options={
                'db_table': 'don_vi',
            },
        ),
        migrations.CreateModel(
            name='TrangBi',
            fields=[
                ('matb', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('tentb', models.TextField()),
                ('loai', models.TextField()),
                ('tinhtrang', models.TextField()),
            ],
            options={
                'db_table': 'trang_bi',
            },
        ),
        migrations.CreateModel(
            name='VuKhi',
            fields=[
                ('masung', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('makn', models.CharField(max_length=255)),
                ('tenvk', models.TextField()),
                ('loaivk', models.BooleanField(choices=[(0, 'Hoan Cai'), (1, 'SSCD')])),
                ('ghichu', models.TextField()),
            ],
            options={
                'db_table': 'vu_khi',
            },
        ),
        migrations.CreateModel(
            name='Thuoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('madv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.donvi')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'thuoc',
            },
        ),
        migrations.CreateModel(
            name='Hocvien',
            fields=[
                ('mahv', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('tenhv', models.CharField(max_length=255)),
                ('madv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.donvi')),
            ],
            options={
                'db_table': 'hoc_vien',
            },
        ),
        migrations.CreateModel(
            name='BienCheVuKhi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('madv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.donvi')),
                ('mahv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.hocvien')),
                ('mavk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.vukhi')),
            ],
            options={
                'db_table': 'bien_che_vk',
            },
        ),
        migrations.CreateModel(
            name='BienCheTrangBi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('madv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.donvi')),
                ('mahv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.hocvien')),
                ('matb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vktbapp.trangbi')),
            ],
            options={
                'db_table': 'bien_che_tb',
            },
        ),
    ]
